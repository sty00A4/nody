(def @tokenize $(in str) #{
	(mut @tokens (vec any []))
	(mut @idx 0)
	(while #(< idx (len in)) #{
		; skip white space
		(while #(contains [' ' '\t' '\r' '\n'] (in idx)) #{
			(inc! @idx)
			(if (>= idx (len in)) #(break))
		})
		; number
		(if (digit? (in idx)) #{
			(mut @num "")
			(while #(digit? (in idx)) #{
				(str-push @num (in idx))
				(inc! @idx)
				(if (>= idx (len in)) #(break))
			})
			(push @tokens (int num))
		; symbol
		} #(if (contains ['+' '-' '*' '/'] (in idx)) #{
			(push @tokens (in idx))
			(inc! @idx)
		} #(inc! @idx)))
	})
	(return tokens)
})

(print (tokenize "1 + 2"))